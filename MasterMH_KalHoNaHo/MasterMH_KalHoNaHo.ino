#define SIZE 200

int f1=0,f2=1,f3=2,f4=3,d1=12,d2=13,g1=14,g2=15;
int intFlute=21,intDrums=22,intGtrStrum=23,intGtrChord=24;
boolean flute=LOW,drums=false,gtrStrum=false,gtrChord=false;
char noteFlute[SIZE]={'C','B','C','B','C','B','C','E','D','C','B','A','B','A','B','C','B','C','B','C','B','C','E','D','C','B','A','B','A','B','B','G','A','C','A','F','G','A','G','G','A','C','A','G','F','F','A','A','G'};
char noteGuitar[SIZE]={0}; 
int noteDrums[SIZE] = {54,35,35,54,54,35,54,35,54,35,54,35,54,54,35,54,54,35,54,35,54,54,35,54,35,54,35,54,35,54,54,35,54,35,54,54,35,35,54,54,35,35,54,54,54,54,54,54,35,54,54,35,54,54,54,54,35};
int timeFlute[SIZE]={0,642,857,1500,1714,2357,2571,2785,3000,3214,3428,4071,4285,4928,5142,6857,7500,7714,8357,8571,9214,9428,9643,9857,10071,10285,10928,11142,11785,12000,13714,14571,15000,15428,15642,18000,18428,18857,19072,21428,21857,22285,22500,24214,24428,24857,25285,25714,25928};
int timeDrums[SIZE]={0,0,107,428,1285,1285,1714,1714,3000,3000,3428,3428,3857,4714,4714,5142,6428,6535,6857,6857,7285,8142,8142,8571,8571,9857,9857,10285,10285,10714,11571,11571,12000,12000,13285,13714,15214,15642,16071,16928,16928,17357,17785,18642,19500,20250,21214,22071,22071,22928,23785,23785,24642,25500,26357,27214,27642};
int timeGuitar[SIZE]={0};
byte onOffFlute[SIZE]={1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1};
int t1,t2;
int iFlute=0,iDrums=0,iGuitar=0;

/*  {{0.0,35},{0.0,54},{88.23529,35},{352.94116,54},{1058.8235,35},{1058.8235,54},{1411.7646,35},{1411.7646,54},{2470.5881,35},{2470.5881,54},{2823.5293,35},{2823.5293,54},{3176.4707,54},{3882.353,35},{3882.353,54},{4235.294,54},{5294.1177,54},{5382.353,35},{5647.0586,35},{5647.0586,54},{6000.0,54},{6705.8823,35},{6705.8823,54},{7058.8237,35},{7058.8237,54},{8117.647,35},{8117.647,54},{8470.588,35},{8470.588,54},{8823.529,54},{9529.412,35},{9529.412,54},{9882.353,35},{9882.353,54},{10941.177,54},{11294.117,54},{12529.412,35},{12882.353,35},{13235.294,54},{13941.177,35},
 *   {13941.177,54},{14294.117,35},{14647.059,54},{15352.941,54},{16058.823,54},{16676.47,54},{17470.588,54},{18176.47,35},{18176.47,54},{18882.354,54},{19588.234,35},{19588.234,54},{20294.117,54},{21000.0,54},{21705.883,54},{22411.766,54},{22764.705,35}};
*/

void setup() {
  // initialize digital pin 13 as an output.
  pinMode(f1, OUTPUT);
  pinMode(f2, OUTPUT);
  pinMode(f3, OUTPUT);
  pinMode(f4, OUTPUT);
  pinMode(d1, OUTPUT);
  pinMode(d2, OUTPUT);
  pinMode(g1, OUTPUT);
  pinMode(g2, OUTPUT);
  pinMode(intFlute, OUTPUT);
  pinMode(intDrums, OUTPUT);
  pinMode(intGtrStrum, OUTPUT);
  pinMode(intGtrChord, OUTPUT);
  t1 = millis();
  Serial.begin(9600);
}

// the loop function runs over and over again forever
void loop(){
  t2 = millis();
  if ((t2-t1) == timeFlute[iFlute]) fluteCall(); else if((t2-t1)>timeFlute[iFlute]) {
    //iFlute++;
  Serial.print("Timer Flute Overflow : ");
  Serial.println(t2-t1); }
  if ((t2-t1) == timeDrums[iDrums]) drumsCall(); else if((t2-t1)>timeDrums[iDrums]) {
    //iDrums++;
  Serial.print("Timer Drums Overflow : ");
  Serial.println(t2-t1); }
  if ((t2-t1) == timeGuitar[iGuitar]) guitarCall();
}
